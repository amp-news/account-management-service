buildscript {
    ext {
        springBootVersion = '2.0.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.amp'
version = '0.0.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}

ext {
    springCloudVersion = 'Finchley.M9'
}

def profiles = 'dev'
def testReportsDir = 'test-reports'

springBoot {
    buildInfo()
}

test {
    reports {
        junitXml.enabled = true
        junitXml.setDestination(file("$buildDir/$testReportsDir/xml"))

        html.enabled = true
        html.setDestination(file("$buildDir/$testReportsDir/html"))
    }
}

bootJar {
    launchScript()
}

bootRun {
    args = ["--spring.profiles.active=" + profiles]
}

dependencies {
    compile('org.modelmapper:modelmapper:1.1.0')
    compile('cz.jirutka.rsql:rsql-parser:2.1.0')
    compile('org.springframework.boot:spring-boot-starter-amqp')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-hateoas')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    compile('com.auth0:java-jwt:3.4.0')
    runtime('org.springframework.boot:spring-boot-devtools')
    runtime('org.postgresql:postgresql')
    compileOnly('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

idea {
    module {
        inheritOutputDirs = true
    }
}
